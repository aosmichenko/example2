@mixin ie {
	*display: inline;
	*zoom: 1;
}
%pseudo {
	position: relative;
	&:before, &:after {
		content: " ";
		position: absolute;
		top: 0;
		left: 0;
	}
}
@mixin pseudo {
	@extend %pseudo;
}
//Div fill the parent
@mixin fill {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}
// super light grid - it works with the .cd-container class inside style.scss
@mixin c($percentage, $float-direction:left) {
	width: 100% * $percentage;
	float: $float-direction;
}
//Shortened Background
@mixin bg($img-name, $repeat: n, $posion: cc, $cover: n) {
	$r: null;
	$p: null;
	@if $repeat == n {
		$r: no-repeat;
	} @else if $repeat == r {
		$r: repeat;
	} @else if $repeat == rx {
		$r: repeat-x;
	} @else if $repeat == ry {
		$r: repeat-y;
	}
	@if $posion == cc {
		$p: center;
	} @else if $posion == ct {
		$p: center top;
	} @else if $posion == cb {
		$p: center bottom;
	} @else if $posion == lc {
		$p: left center;
	} @else if $posion == rc {
		$p: right center;
	} @else {
		$p: $posion;
	}
	background: url($img-path + $img-name + ".png") $r $p;
}
//Shortened Transition
@mixin tr($t: $default-transition) {
	-webkit-transition: $t;
	-moz-transition: $t;
	-ms-transition: $t;
	-o-transition: $t;
	transition: $t;
}
@mixin coverdiv {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}
@mixin cover {
	background-repeat: no-repeat;
	background-size: cover;
	background-position: center;
}

// vertical-align at center
@mixin vcenter {
	position: absolute;
	top: 50%;
	left: 0;
	@include translate(0, -50%);
}
//simple gradient
@mixin g($color1, $color2) {
	@include background-image(linear-gradient($color1, $color2));
}
@mixin gh($color1, $color2) {
	@include background-image(linear-gradient(left, $color1, $color2));
}

// ROTATE
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
	-moz-transform: rotate($deg + deg);
	-o-transform: rotate($deg + deg);
	-webkit-transform: rotate($deg + deg);
	-ms-transform: rotate($deg + deg);
	transform: rotate($deg + deg);
	filter: progid:DXImageTransform.Microsoft.Matrix(M11=$m11, M12=$m12, M21=$m21, M22=$m22, sizingMethod='auto expand');
	zoom: 1;
}

@mixin vertical {
	text-align: center;
	font-size: 0;
	&:before {
		content: "";
		display: inline-block;
		vertical-align: middle;
		width: 0;
		height: 100%;
	}
}
@mixin clr {
	&:after {
		content: " ";
		display: table;
		clear: both;
	}
	*zoom: 1;
}
@mixin placeholder-color($color) {
	&:-moz-placeholder,
	&::-moz-placeholder {
		color: $color;
		opacity: 1;
	}
	&::-webkit-input-placeholder {
		color: $color;
	}
}
@mixin placeholder {
	&:-ms-input-placeholder {
		@content;
	}
	&:-moz-placeholder {
		@content;
	}
	&::-moz-placeholder {
		@content;
	}
	&::-webkit-input-placeholder {
		@content;
	}
	&::placeholder {
		@content;
	}
}
@mixin gray {
	filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0'/></filter></svg>#grayscale");
	// Firefox 10+
	filter: gray;
	// IE6-9
	-webkit-filter: grayscale(100%);
	// Chrome 19+ & Safari 6+
	filter: progid:DXImageTransform.Microsoft.BasicImage(grayScale=1);
	-ms-filter: "progid:DXImageTransform.Microsoft.BasicImage(grayScale=1)";
}
@mixin gray-half {
	filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='saturate' values='0.5'/></filter></svg>#grayscale");
	// Firefox 10+
	filter: gray alpha(opacity=50);
	// IE6-9
	-webkit-filter: grayscale(50%);
}
// Chrome 19+ & Safari 6+

@mixin gray-zero {
	filter: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'><filter id='grayscale'><feColorMatrix type='matrix' values='1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0'/></filter></svg>#grayscale");
	-webkit-filter: grayscale(0%);
}

@mixin gpu {
	@include transform(translate3d(0, 0, 0));
}
@mixin smooth-triangle {
	-webkit-transform: rotate(0.05deg);
	-moz-transform: scale(1.1);
	-o-transform: rotate(0.05deg);
	transform: rotate(0.05deg);
}
@mixin scrollbar {
	&::-webkit-scrollbar {
		@content;
	}
}
@mixin scrollbar-track {
	&::-webkit-scrollbar-track {
		@content;
	}
}
@mixin scrollbar-thumb {
	&::-webkit-scrollbar-thumb {
		@content;
	}
}
@mixin scrollbar-track-piece {
	&::-webkit-scrollbar-track-piece {
		@content;
	}
}
//triangle
@mixin arr($width, $height, $bg, $direction) {
	width: 0px;
	height: 0px;
	border-style: solid;
	@if $direction == t {
		border-width: 0 $width / 2 + px $height + px $width / 2 + px;
		border-color: transparent transparent $bg transparent;
	}
	@if $direction == r {
		border-width: $height / 2 + px 0 $height / 2 + px $width + px;
		border-color: transparent transparent transparent $bg;
	}
	@if $direction == b {
		border-width: $height + px $width / 2 + px 0 $width / 2 + px;
		border-color: $bg transparent transparent transparent;
	}
	@if $direction == l {
		border-width: $height / 2 + px $width + px $height / 2 + px 0;
		border-color: transparent $bg transparent transparent;
	}
	@if $direction == tl {
		border-width: $height + px $width + px 0 0;
		border-color: $bg transparent transparent transparent;
	}
	@if $direction == tr {
		border-width: 0 $width + px $height + px 0;
		border-color: transparent $bg transparent transparent;
	}
	@if $direction == br {
		border-width: 0 0 $height + px $width + px;
		border-color: transparent transparent $bg transparent;
	}
	@if $direction == bl {
		border-width: $width + px 0 0 $height + px;
		border-color: transparent transparent transparent $bg;
	}
}
// example
// +arr(500,50, #000, l)
// +arr(500,50, #000, bl)

@mixin rotate($var) {
	-ms-transform: rotate($var + deg);
	-webkit-transform: rotate($var + deg);
	transform: rotate($var + deg);
}
@mixin blur($var) {
	-webkit-filter: blur($var);
	filter: blur($var);
}
@mixin scale($var) {
	-ms-transform: scale($var);
	-webkit-transform: scale($var);
	transform: scale($var);
}
@mixin translate($varx, $vary) {
	-ms-transform: translate($varx, $vary);
	-webkit-transform: translate($varx, $vary);
	transform: translate($varx, $vary);
}
@mixin clearfix {
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}